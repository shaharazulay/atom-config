"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _XYFrame = require("./XYFrame");

var _XYFrame2 = _interopRequireDefault(_XYFrame);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// components

var MiniMap = function MiniMap(props) {
  var brushStart = props.brushStart,
      brush = props.brush,
      brushEnd = props.brushEnd,
      xBrushable = props.xBrushable,
      yBrushable = props.yBrushable,
      yBrushExtent = props.yBrushExtent,
      xBrushExtent = props.xBrushExtent,
      rest = _objectWithoutProperties(props, ["brushStart", "brush", "brushEnd", "xBrushable", "yBrushable", "yBrushExtent", "xBrushExtent"]);

  var interactivity = {
    start: brushStart,
    during: brush,
    end: brushEnd
  };

  if (xBrushable && yBrushable) {
    interactivity.brush = "xyBrush";

    if (xBrushExtent || yBrushExtent) {
      interactivity.extent = [[0, 0], [].concat(_toConsumableArray(props.size))];
    }
    if (xBrushExtent) {
      interactivity.extent[0] = xBrushExtent;
    }
    if (yBrushExtent) {
      interactivity.extent[1] = yBrushExtent;
    }
  } else if (xBrushable) {
    interactivity.brush = "xBrush";
    if (xBrushExtent) {
      interactivity.extent = xBrushExtent;
    }
  } else if (yBrushable) {
    interactivity.brush = "yBrush";
    if (yBrushExtent) {
      interactivity.extent = yBrushExtent;
    }
  }

  return _react2.default.createElement(_XYFrame2.default, _extends({}, rest, { interaction: interactivity }));
};

MiniMap.propTypes = {
  brushStart: _propTypes2.default.func,
  brush: _propTypes2.default.func,
  brushEnd: _propTypes2.default.func,
  xBrushExtent: _propTypes2.default.array,
  yBrushExtent: _propTypes2.default.array,
  xBrushable: _propTypes2.default.bool,
  yBrushable: _propTypes2.default.bool
};

exports.default = MiniMap;
module.exports = exports['default'];