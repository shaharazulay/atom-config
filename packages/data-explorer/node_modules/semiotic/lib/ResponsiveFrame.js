"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _elementResizeEvent = require("./vendor/element-resize-event");

var _elementResizeEvent2 = _interopRequireDefault(_elementResizeEvent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var createResponsiveFrame = function createResponsiveFrame(Frame) {
  var _class, _temp;

  return _temp = _class = function (_React$Component) {
    _inherits(ResponsiveFrame, _React$Component);

    function ResponsiveFrame(props) {
      _classCallCheck(this, ResponsiveFrame);

      var _this = _possibleConstructorReturn(this, (ResponsiveFrame.__proto__ || Object.getPrototypeOf(ResponsiveFrame)).call(this, props));

      _this.isResizing = false;

      _this._onResize = function (width, height) {
        _this.setState({ containerHeight: height, containerWidth: width });
      };

      _this.state = {
        containerHeight: undefined,
        containerWidth: undefined
      };
      return _this;
    }

    _createClass(ResponsiveFrame, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var element = this.node;

        (0, _elementResizeEvent2.default)(element, function () {
          window.clearTimeout(_this2.isResizing);
          _this2.isResizing = setTimeout(function () {
            _this2.isResizing = false;

            _this2.setState({
              containerHeight: element.offsetHeight,
              containerWidth: element.offsetWidth
            });
          }, _this2.props.debounce);
        });
        this.setState({
          containerHeight: element.offsetHeight,
          containerWidth: element.offsetWidth
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _props = this.props,
            responsiveWidth = _props.responsiveWidth,
            responsiveHeight = _props.responsiveHeight,
            size = _props.size,
            dataVersion = _props.dataVersion,
            debounce = _props.debounce,
            gridDisplay = _props.gridDisplay,
            rest = _objectWithoutProperties(_props, ["responsiveWidth", "responsiveHeight", "size", "dataVersion", "debounce", "gridDisplay"]);

        var _state = this.state,
            containerHeight = _state.containerHeight,
            containerWidth = _state.containerWidth;


        var actualSize = [].concat(_toConsumableArray(size));

        var returnEmpty = false;

        if (responsiveWidth) {
          if (!containerWidth) returnEmpty = true;
          actualSize[0] = containerWidth;
        }

        if (responsiveHeight) {
          if (!containerHeight) returnEmpty = true;
          actualSize[1] = containerHeight;
        }

        var dataVersionWithSize = dataVersion + actualSize.toString() + debounce;

        return _react2.default.createElement(
          "div",
          {
            className: "responsive-container",
            style: gridDisplay ? { minWidth: "0px", minHeight: "0px" } : { height: "100%", width: "100%" },
            ref: function ref(node) {
              return _this3.node = node;
            }
          },
          !returnEmpty && _react2.default.createElement(Frame, _extends({}, rest, {
            size: actualSize,
            dataVersion: dataVersion ? dataVersionWithSize : undefined
          }))
        );
      }
    }]);

    return ResponsiveFrame;
  }(_react2.default.Component), _class.propTypes = {
    size: _propTypes2.default.array
  }, _class.defaultProps = {
    size: [500, 500],
    debounce: 200
  }, _class.displayName = "Responsive" + Frame.displayName, _temp;
};

exports.default = createResponsiveFrame;
module.exports = exports['default'];