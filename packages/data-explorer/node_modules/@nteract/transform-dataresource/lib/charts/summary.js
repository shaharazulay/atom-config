"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.semioticSummaryChart = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/objectSpread"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/toConsumableArray"));

var React = _interopRequireWildcard(require("react"));

var _HTMLLegend = _interopRequireDefault(require("../HTMLLegend"));

var _utilities = require("../utilities");

var _d3Scale = require("d3-scale");

var _tooltipContent = _interopRequireDefault(require("../tooltip-content"));

var fontScale = (0, _d3Scale.scaleLinear)().domain([8, 25]).range([14, 8]).clamp(true);

var semioticSummaryChart = function semioticSummaryChart(data, schema, options) {
  var additionalSettings = {};
  var colorHash = {};
  var chart = options.chart,
      summaryType = options.summaryType,
      primaryKey = options.primaryKey,
      colors = options.colors,
      setColor = options.setColor;
  var dim1 = chart.dim1,
      metric1 = chart.metric1;
  var oAccessor = dim1;
  var rAccessor = metric1;

  if (dim1 && dim1 !== "none") {
    var uniqueValues = data.reduce(function (p, c) {
      return !p.find(function (d) {
        return d === c[dim1].toString();
      }) && (0, _toConsumableArray2.default)(p).concat([c[dim1].toString()]) || p;
    }, []);
    uniqueValues.forEach(function (d, i) {
      colorHash[d] = colors[i % colors.length];
    });
    additionalSettings.afterElements = React.createElement(_HTMLLegend.default, {
      valueHash: {},
      values: uniqueValues,
      colorHash: colorHash,
      setColor: setColor,
      colors: colors
    });
  }

  var summarySettings = (0, _objectSpread2.default)({
    summaryType: {
      type: summaryType,
      bins: 16,
      amplitude: 20
    },
    type: summaryType === "violin" && "swarm",
    projection: "horizontal",
    data: data,
    oAccessor: oAccessor,
    rAccessor: rAccessor,
    summaryStyle: function summaryStyle(d) {
      return {
        fill: colorHash[d[dim1]] || colors[0],
        fillOpacity: 0.8,
        stroke: colorHash[d[dim1]] || colors[0]
      };
    },
    style: function style(d) {
      return {
        fill: colorHash[d[dim1]] || colors[0],
        stroke: "white"
      };
    },
    oPadding: 5,
    oLabel: function oLabel(d) {
      return React.createElement("text", {
        textAnchor: "end",
        fontSize: "".concat(d && fontScale(d.length) || 12, "px")
      }, d);
    },
    margin: {
      top: 25,
      right: 10,
      bottom: 50,
      left: 100
    },
    axis: {
      orient: "left",
      label: rAccessor,
      tickFormat: _utilities.numeralFormatting
    },
    baseMarkProps: {
      forceUpdate: true
    },
    pieceHoverAnnotation: summaryType === "violin",
    tooltipContent: function tooltipContent(d) {
      return React.createElement(_tooltipContent.default, null, React.createElement("h3", null, primaryKey.map(function (p) {
        return d[p];
      }).join(", ")), React.createElement("p", null, dim1, ": ", d[dim1]), React.createElement("p", null, rAccessor, ": ", d[rAccessor]));
    }
  }, additionalSettings);
  return summarySettings;
};

exports.semioticSummaryChart = semioticSummaryChart;