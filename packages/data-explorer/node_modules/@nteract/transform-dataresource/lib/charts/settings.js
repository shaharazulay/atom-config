"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.semioticSettings = void 0;

var _semiotic = require("semiotic");

var _ParallelCoordinatesController = _interopRequireDefault(require("../ParallelCoordinatesController"));

var _line = require("./line");

var _network = require("./network");

var _hierarchical = require("./hierarchical");

var _bar = require("./bar");

var _xyplot = require("./xyplot");

var _summary = require("./summary");

var semioticParallelCoordinates = function semioticParallelCoordinates(data, schema, options) {
  return {
    data: data,
    schema: schema,
    options: options
  };
};

var semioticSettings = {
  line: {
    Frame: _semiotic.ResponsiveXYFrame,
    controls: "switch between linetype",
    chartGenerator: _line.semioticLineChart
  },
  scatter: {
    Frame: _semiotic.ResponsiveXYFrame,
    controls: "switch between modes",
    chartGenerator: _xyplot.semioticScatterplot
  },
  hexbin: {
    Frame: _semiotic.ResponsiveXYFrame,
    controls: "switch between modes",
    chartGenerator: _xyplot.semioticHexbin
  },
  bar: {
    Frame: _semiotic.ResponsiveOrdinalFrame,
    controls: "switch between modes",
    chartGenerator: _bar.semioticBarChart
  },
  summary: {
    Frame: _semiotic.ResponsiveOrdinalFrame,
    controls: "switch between modes",
    chartGenerator: _summary.semioticSummaryChart
  },
  network: {
    Frame: _semiotic.ResponsiveNetworkFrame,
    controls: "switch between modes",
    chartGenerator: _network.semioticNetwork
  },
  hierarchy: {
    Frame: _semiotic.ResponsiveNetworkFrame,
    controls: "switch between modes",
    chartGenerator: _hierarchical.semioticHierarchicalChart
  },
  parallel: {
    Frame: _ParallelCoordinatesController.default,
    controls: "switch between modes",
    chartGenerator: semioticParallelCoordinates
  }
};
exports.semioticSettings = semioticSettings;