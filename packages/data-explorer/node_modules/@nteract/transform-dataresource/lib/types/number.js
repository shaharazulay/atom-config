"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.castNumber = castNumber;

var _lodash = _interopRequireDefault(require("lodash"));

var _error = require("./error");

// Module API
function castNumber(format, value) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var percentage = false;
  var currency = options.currency || false;
  var decimalChar = options.decimalChar || _DEFAULT_DECIMAL_CHAR;
  var groupChar = options.groupChar || _DEFAULT_GROUP_CHAR;

  if (!_lodash.default.isNumber(value)) {
    if (!_lodash.default.isString(value)) {
      return _error.ERROR;
    }

    if (!value.length) {
      return _error.ERROR;
    }

    value = value.replace(new RegExp("\\s", "g"), "");
    value = value.replace(new RegExp("[".concat(decimalChar, "]"), "g"), ".");
    value = value.replace(new RegExp("[".concat(groupChar, "]"), "g"), "");

    if (currency) {
      value = value.replace(new RegExp("[".concat(_CURRENCY_CHAR, "]"), "g"), "");
    }

    var result = value.replace(new RegExp("[".concat(_PERCENT_CHAR, "]"), "g"), "");

    if (value !== result) {
      percentage = true;
      value = result;
    }

    try {
      value = _lodash.default.toNumber(value);
    } catch (error) {
      return _error.ERROR;
    }
  }

  if (_lodash.default.isNaN(value)) {
    return _error.ERROR;
  }

  if (percentage) {
    value = value / 100;
  }

  return value;
} // Internal


var _DEFAULT_DECIMAL_CHAR = ".";
var _DEFAULT_GROUP_CHAR = "";
var _PERCENT_CHAR = "%‰‱％﹪٪";
var _CURRENCY_CHAR = "$£€";